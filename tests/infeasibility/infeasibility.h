#ifndef INFEASIBILITY_DATA_H
#define INFEASIBILITY_DATA_H
#include "osqp.h"


/* create additional data and solutions structure */
typedef struct {
c_int status_test;
} infeasibility_sols_data;

/* function to generate QP problem data */
OSQPData * generate_problem_infeasibility(){

OSQPData * data = (OSQPData *)c_malloc(sizeof(OSQPData));

// Problem dimensions
data->n = 50;
data->m = 150;

// Problem vectors
data->l = c_malloc(150 * sizeof(c_float));
data->l[0] = -2.74712031489746433266;
data->l[1] = -3.81746878788404053751;
data->l[2] = -2.39899472535944724427;
data->l[3] = -4.72593238376730973016;
data->l[4] = -2.41744137810116832554;
data->l[5] = -3.28756222199653125315;
data->l[6] = -3.12893820514476495021;
data->l[7] = -1.80885125722254147540;
data->l[8] = -2.37034101745666925254;
data->l[9] = -2.26821383558679068315;
data->l[10] = -2.97564950673287542671;
data->l[11] = -3.67211212605855319424;
data->l[12] = -3.19991120895756653297;
data->l[13] = -2.48790910637834628005;
data->l[14] = -2.04145036622327991083;
data->l[15] = -2.28598587945284359435;
data->l[16] = -3.14566003482865141905;
data->l[17] = -3.74263223151427038005;
data->l[18] = -1.41487351053404131207;
data->l[19] = -1.80301056312970753304;
data->l[20] = -1.20559414100314277185;
data->l[21] = -3.24982631630894713837;
data->l[22] = -4.88382327733297927352;
data->l[23] = -1.01327570579192927092;
data->l[24] = -3.77157548012216237154;
data->l[25] = 3.47833862825365613958;
data->l[26] = -3.46146865690653449121;
data->l[27] = -4.33034715612842902033;
data->l[28] = -3.57898673632677688516;
data->l[29] = -3.25248135505327162775;
data->l[30] = -4.12610050870496802844;
data->l[31] = -4.66543938087587228836;
data->l[32] = -4.20509819364660053509;
data->l[33] = -3.43842737552473209917;
data->l[34] = -3.11104481873378357903;
data->l[35] = -2.30335035915658137284;
data->l[36] = -2.63140578168049987795;
data->l[37] = -4.38357387165604173163;
data->l[38] = -2.05894462353688911804;
data->l[39] = -3.87164259850274206087;
data->l[40] = -2.99201574968336059257;
data->l[41] = -1.71697080995276585291;
data->l[42] = -3.28743367788370433047;
data->l[43] = -3.15882298766022495684;
data->l[44] = -3.56251637036341284315;
data->l[45] = -1.69805461044622596489;
data->l[46] = -1.77182378253132877255;
data->l[47] = -2.08499502039985307178;
data->l[48] = -4.70575526007123734473;
data->l[49] = -2.09875701485207066810;
data->l[50] = -2.76953594451925866338;
data->l[51] = -3.04018848933959429104;
data->l[52] = -2.24928905919787514023;
data->l[53] = -1.82184655806737527683;
data->l[54] = -2.82907705917085516845;
data->l[55] = -2.64817428064629423190;
data->l[56] = -4.11249250738995186794;
data->l[57] = -3.29925168250289280181;
data->l[58] = -1.78448739914603615730;
data->l[59] = -3.72204421926700756984;
data->l[60] = -5.51368608216042233039;
data->l[61] = -2.68120113717881292104;
data->l[62] = -1.72385713974130538872;
data->l[63] = -2.96490168438256729289;
data->l[64] = -3.52653901959265869692;
data->l[65] = -2.74819823756002801218;
data->l[66] = -3.32310874616707385698;
data->l[67] = -3.61110546698796008869;
data->l[68] = -2.74190003082217481634;
data->l[69] = -1.96864132240284073205;
data->l[70] = -3.78518076818548010465;
data->l[71] = -1.40292602037093083744;
data->l[72] = -2.01419639551792206689;
data->l[73] = -2.60433158839467182588;
data->l[74] = -2.16659649697049161432;
data->l[75] = -2.58231138732676912539;
data->l[76] = -2.33175158257567938236;
data->l[77] = -3.88443384144112169309;
data->l[78] = -3.98362751583978047520;
data->l[79] = -3.29311108799632901167;
data->l[80] = -2.57689571099132486154;
data->l[81] = -2.23201164428383158622;
data->l[82] = -2.32407039797209868937;
data->l[83] = -4.48274933658756413735;
data->l[84] = -0.64647344389744265669;
data->l[85] = -3.24175077379601317418;
data->l[86] = -2.79070571706265724288;
data->l[87] = -3.80435412062576983061;
data->l[88] = -4.22076634441651421525;
data->l[89] = -3.40978068085621632832;
data->l[90] = -3.33790461622401890551;
data->l[91] = -2.20760686889681556622;
data->l[92] = -2.93838586233923759750;
data->l[93] = -1.84259939698848373979;
data->l[94] = -3.62842079182682386573;
data->l[95] = -3.72518855256805325737;
data->l[96] = -4.82193017414109448282;
data->l[97] = -1.84928092508391728188;
data->l[98] = -3.21520182098924900416;
data->l[99] = -4.17563231628302666820;
data->l[100] = -2.37839450866066215440;
data->l[101] = -1.09742360496871205200;
data->l[102] = -1.14254335008738561186;
data->l[103] = -4.07212851326142200037;
data->l[104] = -2.57291210067793230110;
data->l[105] = -2.21288216678656146641;
data->l[106] = -4.12306606604739123156;
data->l[107] = -4.30259642979078194003;
data->l[108] = -5.22802445129276094349;
data->l[109] = -3.38884191502971177101;
data->l[110] = -4.12768420984216088954;
data->l[111] = -4.03653182561268319972;
data->l[112] = -3.93063429132531760857;
data->l[113] = -2.90068627227357644927;
data->l[114] = -1.91316395802279215488;
data->l[115] = -2.53613004660575880322;
data->l[116] = -3.10438495925273993947;
data->l[117] = -2.16509556825658044943;
data->l[118] = -2.16570546403446062556;
data->l[119] = -3.29959329567663361971;
data->l[120] = -4.19746489619249185665;
data->l[121] = -3.91416400282628629270;
data->l[122] = -1.61023659286608866736;
data->l[123] = -3.27884052184168917066;
data->l[124] = -4.05704866113410744788;
data->l[125] = -3.45164385611636070905;
data->l[126] = -3.33658101012892771564;
data->l[127] = -4.11975965310448444257;
data->l[128] = -1.25091164045616798361;
data->l[129] = -3.14595332493565127407;
data->l[130] = -2.49985289927093168316;
data->l[131] = -3.80848847621378672201;
data->l[132] = -4.40756534783560560697;
data->l[133] = -3.99037092915898439216;
data->l[134] = -1.95642118444397650201;
data->l[135] = -5.21367632764764543651;
data->l[136] = -2.47559477399192928715;
data->l[137] = -2.86767276424244599298;
data->l[138] = -2.34677845340008461861;
data->l[139] = -3.52553876316974346139;
data->l[140] = -3.44464461157006862635;
data->l[141] = -3.16181194393621289862;
data->l[142] = -4.55960638679378238436;
data->l[143] = -2.60380398075897723231;
data->l[144] = -2.37164129514946830923;
data->l[145] = -3.87123657281664979024;
data->l[146] = -3.34446463884300637659;
data->l[147] = -1.71744953595935445634;
data->l[148] = -0.98134503937255423978;
data->l[149] = -3.65661415567073255772;
data->u = c_malloc(150 * sizeof(c_float));
data->u[0] = 3.17469329926325150026;
data->u[1] = 2.46453517252454012976;
data->u[2] = 4.29611506880582627588;
data->u[3] = 3.71047568718162512624;
data->u[4] = 4.26748662308911441698;
data->u[5] = 3.21441853754871642579;
data->u[6] = 4.96150954549563127927;
data->u[7] = 2.16549850359207329831;
data->u[8] = 2.88255345494285908359;
data->u[9] = 4.06959593832260324575;
data->u[10] = 3.39571674946478019308;
data->u[11] = 1.84560856319879107446;
data->u[12] = 1.65516343837115109672;
data->u[13] = 2.72225004715557616919;
data->u[14] = 3.46785048601076795194;
data->u[15] = 3.62000434547516292128;
data->u[16] = 1.96987821792665918075;
data->u[17] = 0.89308568768406360050;
data->u[18] = 3.20847146908476332783;
data->u[19] = 3.72798701455191494603;
data->u[20] = 3.90708857153737509904;
data->u[21] = 2.58387816568202310918;
data->u[22] = 2.47796132121905765544;
data->u[23] = 4.80500724276218704745;
data->u[24] = 2.34547368218304264076;
data->u[25] = 3.97833862825365613958;
data->u[26] = 2.45174941211441987932;
data->u[27] = 3.28179516611060329012;
data->u[28] = 1.75196256083249224389;
data->u[29] = 2.18429879500923007640;
data->u[30] = 3.98453972372303066862;
data->u[31] = 4.53979786670972096374;
data->u[32] = 1.95400968150319953587;
data->u[33] = 3.14507861686870349160;
data->u[34] = 4.51891936313561259908;
data->u[35] = 3.99141040786985890065;
data->u[36] = 3.12479550248473891827;
data->u[37] = 2.90571043589004140983;
data->u[38] = 4.37718499234461777547;
data->u[39] = 2.22053923359283578165;
data->u[40] = 2.99251173271512538321;
data->u[41] = 3.60936542228565215851;
data->u[42] = 4.30083439640840126117;
data->u[43] = 3.18354904473273769838;
data->u[44] = 3.07039927211075847069;
data->u[45] = 3.70733057061793713771;
data->u[46] = 2.00728799195401297339;
data->u[47] = 0.89129621043394413604;
data->u[48] = 3.37167107263967613662;
data->u[49] = 2.15918909507478939958;
data->u[50] = 3.66365315324073748116;
data->u[51] = 3.39152405324033079381;
data->u[52] = 3.41452259237067590192;
data->u[53] = 2.77856810409154419972;
data->u[54] = 2.10715560970430537679;
data->u[55] = 3.51475577442399256256;
data->u[56] = 1.81254668177121747163;
data->u[57] = 1.81374858168785291213;
data->u[58] = 3.50385833057222439990;
data->u[59] = 1.86030941789710402290;
data->u[60] = 1.61846330703170293575;
data->u[61] = 2.09988869902763841679;
data->u[62] = 1.92266153366862946328;
data->u[63] = 3.32921127951897721786;
data->u[64] = 2.99870445756514758529;
data->u[65] = 2.98352250174655386772;
data->u[66] = 2.65618289149886388500;
data->u[67] = 3.52290293211739147239;
data->u[68] = 2.35920094265317104032;
data->u[69] = 2.43290975341521509279;
data->u[70] = 3.56267253812426254456;
data->u[71] = 4.91428543718158472586;
data->u[72] = 2.83558474387111525417;
data->u[73] = 3.41201637625331510861;
data->u[74] = 3.59976194239021562993;
data->u[75] = 3.64911601429869003610;
data->u[76] = 1.79391044461231663476;
data->u[77] = 2.06631687248661588541;
data->u[78] = 3.36596438410830067767;
data->u[79] = 1.94236318585869671693;
data->u[80] = 2.98340058488767390088;
data->u[81] = 3.93263193549430312146;
data->u[82] = 2.71351101998686328187;
data->u[83] = 2.82406470041933754800;
data->u[84] = 1.77172625139888806345;
data->u[85] = 2.84068304648192615502;
data->u[86] = 3.38904333553589953709;
data->u[87] = 2.88761255969145658185;
data->u[88] = 2.66393344843721635584;
data->u[89] = 4.51754009430781877654;
data->u[90] = 3.27500768588267598957;
data->u[91] = 2.87583871161687198992;
data->u[92] = 1.73162039431980874227;
data->u[93] = 2.95037474108441033493;
data->u[94] = 5.54698299643028658323;
data->u[95] = 3.38166743448587636678;
data->u[96] = 3.49245489951020227082;
data->u[97] = 2.10849047597579364322;
data->u[98] = 1.84721213521936444835;
data->u[99] = 1.56753538474253550916;
data->u[100] = 2.23261733962305619627;
data->u[101] = 3.02399075639153203099;
data->u[102] = 1.21026754717152051910;
data->u[103] = 0.95037905173115300173;
data->u[104] = 4.68118834864414612440;
data->u[105] = 3.18366366221936347713;
data->u[106] = 2.50839270883520581990;
data->u[107] = 3.17501576192585099889;
data->u[108] = 2.06222662298121361957;
data->u[109] = 1.78751036533781793025;
data->u[110] = 3.07595611991238637728;
data->u[111] = 3.33538184581988828015;
data->u[112] = 2.78136532367420841183;
data->u[113] = 3.25851414585074561359;
data->u[114] = 2.51159098546070058688;
data->u[115] = 2.36912985588509572565;
data->u[116] = 2.65536378675552242612;
data->u[117] = 3.57878768601785957060;
data->u[118] = 5.54272397309329534210;
data->u[119] = 3.75480165267268750640;
data->u[120] = 2.18057464774025033805;
data->u[121] = 3.23853683086441890282;
data->u[122] = 3.83357152152701363690;
data->u[123] = 2.09423935208302269828;
data->u[124] = 2.63499734826831710777;
data->u[125] = 1.84075942386294411079;
data->u[126] = 3.05821534851354348561;
data->u[127] = 3.81988366317056193822;
data->u[128] = 3.69159771866042119015;
data->u[129] = 3.89747009147935052908;
data->u[130] = 1.34397393243523510797;
data->u[131] = 1.90409912126042568659;
data->u[132] = 2.69996215501297065487;
data->u[133] = 5.15201578367829782223;
data->u[134] = 4.11333442564847295841;
data->u[135] = 2.93468997411951049159;
data->u[136] = 3.63855178169959714296;
data->u[137] = 3.30812493028818943586;
data->u[138] = 3.81101971952357310158;
data->u[139] = 4.06244941893810285194;
data->u[140] = 2.79666435672843904925;
data->u[141] = 2.12368940751556056767;
data->u[142] = 3.35837068040224240306;
data->u[143] = 4.21010434002817568455;
data->u[144] = 2.24907632032546223044;
data->u[145] = 3.65966994379357668521;
data->u[146] = 2.96817598162667151129;
data->u[147] = 1.71268556419632878018;
data->u[148] = 4.39662277792499622819;
data->u[149] = 0.46306374159293151038;
data->q = c_malloc(50 * sizeof(c_float));
data->q[0] = -0.38684561909443321293;
data->q[1] = 1.10015609593868157745;
data->q[2] = 0.98950382075643716906;
data->q[3] = -0.41836402765118863023;
data->q[4] = 0.96293127009399881455;
data->q[5] = 0.36441216560058581342;
data->q[6] = -1.23363319658368708609;
data->q[7] = 1.62590595462870646237;
data->q[8] = 0.74180738347503893948;
data->q[9] = -1.61818023348955697394;
data->q[10] = -1.33278153598225168608;
data->q[11] = -1.17838874718957309362;
data->q[12] = -0.80298136961033350634;
data->q[13] = -1.37976807463235151552;
data->q[14] = 1.09168356680738809494;
data->q[15] = 0.16437047158537773650;
data->q[16] = -0.31008622388120854474;
data->q[17] = 0.02848941749108957130;
data->q[18] = -0.05803279598866264294;
data->q[19] = -0.59097090218740389034;
data->q[20] = 0.41913699609553661807;
data->q[21] = 0.46686172522765667647;
data->q[22] = -0.93309598660316583896;
data->q[23] = 1.82323109179712905537;
data->q[24] = 0.22737165033375711376;
data->q[25] = 0.24714755952286168728;
data->q[26] = 0.42173951860969099981;
data->q[27] = -0.25474674821918308343;
data->q[28] = -0.66164791476540685267;
data->q[29] = -0.93575616699208430393;
data->q[30] = -0.64621485703962999736;
data->q[31] = -0.73889066645283063561;
data->q[32] = -0.12346073110665929662;
data->q[33] = 0.55556807404834240849;
data->q[34] = -0.53338006178857189088;
data->q[35] = 0.96030825726403079567;
data->q[36] = 1.48553710399295169076;
data->q[37] = -0.08120594258141752841;
data->q[38] = -0.26052103301503570787;
data->q[39] = -0.90983694018205019116;
data->q[40] = -1.39233349101045478236;
data->q[41] = 1.09559879875347321310;
data->q[42] = 1.73717492034919174237;
data->q[43] = 1.40091568565727375706;
data->q[44] = 0.90999408743440257652;
data->q[45] = 0.02420981681125293841;
data->q[46] = 2.30204665404542652141;
data->q[47] = -0.14840539906276264959;
data->q[48] = 1.42444163939521550866;
data->q[49] = -1.82206883286239706976;


// Matrix A
//---------
data->A = c_malloc(sizeof(csc));
data->A->m = 150;
data->A->n = 50;
data->A->nz = -1;
data->A->nzmax = 75;
data->A->x = c_malloc(75 * sizeof(c_float));
data->A->x[0] = 0.14894695560462056783;
data->A->x[1] = 0.39461118005190309876;
data->A->x[2] = 0.39215301450698214492;
data->A->x[3] = 0.73101643329753662748;
data->A->x[4] = 0.17595171909410778355;
data->A->x[5] = 0.07161798896161886141;
data->A->x[6] = 0.33552953090383541568;
data->A->x[7] = 0.04291590086605712173;
data->A->x[8] = 0.41050669812451245910;
data->A->x[9] = 0.20475559140028209981;
data->A->x[10] = 0.03385073076214950571;
data->A->x[11] = 0.92099331922443283815;
data->A->x[12] = 0.44987785235687982599;
data->A->x[13] = 0.03548908535027628375;
data->A->x[14] = 0.60110725739164883041;
data->A->x[15] = 0.30765534015472362217;
data->A->x[16] = 0.80974267671452349049;
data->A->x[17] = 0.61749904277336986613;
data->A->x[18] = 0.45338650251919554446;
data->A->x[19] = 0.15142136782894022318;
data->A->x[20] = 0.26793388935541051499;
data->A->x[21] = 0.36679764790898239379;
data->A->x[22] = 0.68065591890023424693;
data->A->x[23] = 0.83680606857472117355;
data->A->x[24] = 0.53162451878035943409;
data->A->x[25] = 0.13324101138660326971;
data->A->x[26] = 0.03307562014524390026;
data->A->x[27] = 0.47067499264458556585;
data->A->x[28] = 0.36249023780607669831;
data->A->x[29] = 0.86095850412714280964;
data->A->x[30] = 0.09868515324788829091;
data->A->x[31] = 0.84345556198272586546;
data->A->x[32] = 0.74583755172847876480;
data->A->x[33] = 0.26635362626887382209;
data->A->x[34] = 0.82353923435683362708;
data->A->x[35] = 0.80029086141687832967;
data->A->x[36] = 0.83470043604170740537;
data->A->x[37] = 0.58271137812661655264;
data->A->x[38] = 0.67095657605339875662;
data->A->x[39] = 0.24841373693277357670;
data->A->x[40] = 0.00980350732656087853;
data->A->x[41] = 0.85936226813809746261;
data->A->x[42] = 0.86667654965009210954;
data->A->x[43] = 0.11235758460501177325;
data->A->x[44] = 0.50061957640948762105;
data->A->x[45] = 0.07877254790766041737;
data->A->x[46] = 0.86409070539097965202;
data->A->x[47] = 0.58880908653494357097;
data->A->x[48] = 0.43142872464931081300;
data->A->x[49] = 0.53655473115969776199;
data->A->x[50] = 0.00957387103773554848;
data->A->x[51] = 0.41642974804813437384;
data->A->x[52] = 0.40137349455584026003;
data->A->x[53] = 0.03638344775924118313;
data->A->x[54] = 0.55047953173389874149;
data->A->x[55] = 0.07370417231635684185;
data->A->x[56] = 0.84286544621671433131;
data->A->x[57] = 0.89200992618823637947;
data->A->x[58] = 0.40035945713717568939;
data->A->x[59] = 0.69411246825710226638;
data->A->x[60] = 0.60407659393817203508;
data->A->x[61] = 0.66626572512911075297;
data->A->x[62] = 0.93094277277843118235;
data->A->x[63] = 0.34742093103686522149;
data->A->x[64] = 0.37201587561188964592;
data->A->x[65] = 0.77570260491698228567;
data->A->x[66] = 0.00172345321418398978;
data->A->x[67] = 0.41329484915521608190;
data->A->x[68] = 0.76860353244027479480;
data->A->x[69] = 0.24060863660044706780;
data->A->x[70] = 0.08282279583418716840;
data->A->x[71] = 0.82608191765609284563;
data->A->x[72] = 0.36891171592769333998;
data->A->x[73] = 0.56832066086077148714;
data->A->x[74] = 0.13466421062849565082;
data->A->i = c_malloc(75 * sizeof(c_int));
data->A->i[0] = 38;
data->A->i[1] = 3;
data->A->i[2] = 124;
data->A->i[3] = 14;
data->A->i[4] = 10;
data->A->i[5] = 91;
data->A->i[6] = 90;
data->A->i[7] = 70;
data->A->i[8] = 71;
data->A->i[9] = 118;
data->A->i[10] = 146;
data->A->i[11] = 129;
data->A->i[12] = 10;
data->A->i[13] = 70;
data->A->i[14] = 143;
data->A->i[15] = 22;
data->A->i[16] = 84;
data->A->i[17] = 122;
data->A->i[18] = 115;
data->A->i[19] = 3;
data->A->i[20] = 2;
data->A->i[21] = 9;
data->A->i[22] = 141;
data->A->i[23] = 102;
data->A->i[24] = 74;
data->A->i[25] = 125;
data->A->i[26] = 56;
data->A->i[27] = 98;
data->A->i[28] = 37;
data->A->i[29] = 131;
data->A->i[30] = 21;
data->A->i[31] = 99;
data->A->i[32] = 73;
data->A->i[33] = 41;
data->A->i[34] = 39;
data->A->i[35] = 70;
data->A->i[36] = 36;
data->A->i[37] = 43;
data->A->i[38] = 45;
data->A->i[39] = 39;
data->A->i[40] = 43;
data->A->i[41] = 89;
data->A->i[42] = 28;
data->A->i[43] = 23;
data->A->i[44] = 43;
data->A->i[45] = 79;
data->A->i[46] = 97;
data->A->i[47] = 60;
data->A->i[48] = 90;
data->A->i[49] = 135;
data->A->i[50] = 137;
data->A->i[51] = 81;
data->A->i[52] = 128;
data->A->i[53] = 12;
data->A->i[54] = 46;
data->A->i[55] = 48;
data->A->i[56] = 130;
data->A->i[57] = 132;
data->A->i[58] = 22;
data->A->i[59] = 41;
data->A->i[60] = 44;
data->A->i[61] = 145;
data->A->i[62] = 52;
data->A->i[63] = 79;
data->A->i[64] = 28;
data->A->i[65] = 37;
data->A->i[66] = 30;
data->A->i[67] = 124;
data->A->i[68] = 36;
data->A->i[69] = 98;
data->A->i[70] = 119;
data->A->i[71] = 34;
data->A->i[72] = 107;
data->A->i[73] = 90;
data->A->i[74] = 32;
data->A->p = c_malloc((50 + 1) * sizeof(c_int));
data->A->p[0] = 0;
data->A->p[1] = 1;
data->A->p[2] = 3;
data->A->p[3] = 4;
data->A->p[4] = 4;
data->A->p[5] = 6;
data->A->p[6] = 7;
data->A->p[7] = 10;
data->A->p[8] = 11;
data->A->p[9] = 11;
data->A->p[10] = 12;
data->A->p[11] = 15;
data->A->p[12] = 15;
data->A->p[13] = 18;
data->A->p[14] = 19;
data->A->p[15] = 20;
data->A->p[16] = 20;
data->A->p[17] = 22;
data->A->p[18] = 23;
data->A->p[19] = 24;
data->A->p[20] = 25;
data->A->p[21] = 26;
data->A->p[22] = 27;
data->A->p[23] = 28;
data->A->p[24] = 30;
data->A->p[25] = 30;
data->A->p[26] = 31;
data->A->p[27] = 32;
data->A->p[28] = 33;
data->A->p[29] = 34;
data->A->p[30] = 34;
data->A->p[31] = 34;
data->A->p[32] = 36;
data->A->p[33] = 39;
data->A->p[34] = 42;
data->A->p[35] = 43;
data->A->p[36] = 47;
data->A->p[37] = 48;
data->A->p[38] = 49;
data->A->p[39] = 51;
data->A->p[40] = 53;
data->A->p[41] = 58;
data->A->p[42] = 62;
data->A->p[43] = 64;
data->A->p[44] = 66;
data->A->p[45] = 68;
data->A->p[46] = 71;
data->A->p[47] = 72;
data->A->p[48] = 73;
data->A->p[49] = 74;
data->A->p[50] = 75;


// Matrix P
//---------
data->P = c_malloc(sizeof(csc));
data->P->m = 50;
data->P->n = 50;
data->P->nz = -1;
data->P->nzmax = 56;
data->P->x = c_malloc(56 * sizeof(c_float));
data->P->x[0] = 1.00000000000000000000;
data->P->x[1] = 1.00000000000000000000;
data->P->x[2] = 1.00000000000000000000;
data->P->x[3] = 1.05356622256456078368;
data->P->x[4] = 0.21197265196415873700;
data->P->x[5] = 1.75916299777153106731;
data->P->x[6] = 1.75974107490713516100;
data->P->x[7] = 1.00000000000000000000;
data->P->x[8] = 1.00000000000000000000;
data->P->x[9] = 1.86104164088724255421;
data->P->x[10] = 0.80114281285458355253;
data->P->x[11] = 1.21582840066926478606;
data->P->x[12] = 1.00000000000000000000;
data->P->x[13] = 1.00000000000000000000;
data->P->x[14] = 1.68816855244784447265;
data->P->x[15] = 1.00000000000000000000;
data->P->x[16] = 0.80114281285458355253;
data->P->x[17] = 1.74541087923133897419;
data->P->x[18] = 1.38237620443159570094;
data->P->x[19] = 1.00000000000000000000;
data->P->x[20] = 1.75749429146438229665;
data->P->x[21] = 0.77681834398738713876;
data->P->x[22] = 1.00000000000000000000;
data->P->x[23] = 1.00000000000000000000;
data->P->x[24] = 1.50466928807449384919;
data->P->x[25] = 1.00000000000000000000;
data->P->x[26] = 1.60279222057681192126;
data->P->x[27] = 0.21197265196415873700;
data->P->x[28] = 1.83881974553205718159;
data->P->x[29] = 1.00000000000000000000;
data->P->x[30] = 1.36239201385484420825;
data->P->x[31] = 0.77681834398738713876;
data->P->x[32] = 1.79663536260943645928;
data->P->x[33] = 1.00000000000000000000;
data->P->x[34] = 1.00000000000000000000;
data->P->x[35] = 1.00000000000000000000;
data->P->x[36] = 1.06879549575852350607;
data->P->x[37] = 1.00000000000000000000;
data->P->x[38] = 1.00000000000000000000;
data->P->x[39] = 1.94928460651727530895;
data->P->x[40] = 1.00000000000000000000;
data->P->x[41] = 1.00000000000000000000;
data->P->x[42] = 1.00000000000000000000;
data->P->x[43] = 1.00000000000000000000;
data->P->x[44] = 1.03162725759552742488;
data->P->x[45] = 1.56496571588533184283;
data->P->x[46] = 1.00000000000000000000;
data->P->x[47] = 1.00000000000000000000;
data->P->x[48] = 1.00000000000000000000;
data->P->x[49] = 1.07057717484269931951;
data->P->x[50] = 1.12692735521577347413;
data->P->x[51] = 1.00000000000000000000;
data->P->x[52] = 1.55623537332427819280;
data->P->x[53] = 1.00000000000000000000;
data->P->x[54] = 1.00000000000000000000;
data->P->x[55] = 1.91163367042492104986;
data->P->i = c_malloc(56 * sizeof(c_int));
data->P->i[0] = 0;
data->P->i[1] = 1;
data->P->i[2] = 2;
data->P->i[3] = 3;
data->P->i[4] = 23;
data->P->i[5] = 4;
data->P->i[6] = 5;
data->P->i[7] = 6;
data->P->i[8] = 7;
data->P->i[9] = 8;
data->P->i[10] = 14;
data->P->i[11] = 9;
data->P->i[12] = 10;
data->P->i[13] = 11;
data->P->i[14] = 12;
data->P->i[15] = 13;
data->P->i[16] = 8;
data->P->i[17] = 14;
data->P->i[18] = 15;
data->P->i[19] = 16;
data->P->i[20] = 17;
data->P->i[21] = 26;
data->P->i[22] = 18;
data->P->i[23] = 19;
data->P->i[24] = 20;
data->P->i[25] = 21;
data->P->i[26] = 22;
data->P->i[27] = 3;
data->P->i[28] = 23;
data->P->i[29] = 24;
data->P->i[30] = 25;
data->P->i[31] = 17;
data->P->i[32] = 26;
data->P->i[33] = 27;
data->P->i[34] = 28;
data->P->i[35] = 29;
data->P->i[36] = 30;
data->P->i[37] = 31;
data->P->i[38] = 32;
data->P->i[39] = 33;
data->P->i[40] = 34;
data->P->i[41] = 35;
data->P->i[42] = 36;
data->P->i[43] = 37;
data->P->i[44] = 38;
data->P->i[45] = 39;
data->P->i[46] = 40;
data->P->i[47] = 41;
data->P->i[48] = 42;
data->P->i[49] = 43;
data->P->i[50] = 44;
data->P->i[51] = 45;
data->P->i[52] = 46;
data->P->i[53] = 47;
data->P->i[54] = 48;
data->P->i[55] = 49;
data->P->p = c_malloc((50 + 1) * sizeof(c_int));
data->P->p[0] = 0;
data->P->p[1] = 1;
data->P->p[2] = 2;
data->P->p[3] = 3;
data->P->p[4] = 5;
data->P->p[5] = 6;
data->P->p[6] = 7;
data->P->p[7] = 8;
data->P->p[8] = 9;
data->P->p[9] = 11;
data->P->p[10] = 12;
data->P->p[11] = 13;
data->P->p[12] = 14;
data->P->p[13] = 15;
data->P->p[14] = 16;
data->P->p[15] = 18;
data->P->p[16] = 19;
data->P->p[17] = 20;
data->P->p[18] = 22;
data->P->p[19] = 23;
data->P->p[20] = 24;
data->P->p[21] = 25;
data->P->p[22] = 26;
data->P->p[23] = 27;
data->P->p[24] = 29;
data->P->p[25] = 30;
data->P->p[26] = 31;
data->P->p[27] = 33;
data->P->p[28] = 34;
data->P->p[29] = 35;
data->P->p[30] = 36;
data->P->p[31] = 37;
data->P->p[32] = 38;
data->P->p[33] = 39;
data->P->p[34] = 40;
data->P->p[35] = 41;
data->P->p[36] = 42;
data->P->p[37] = 43;
data->P->p[38] = 44;
data->P->p[39] = 45;
data->P->p[40] = 46;
data->P->p[41] = 47;
data->P->p[42] = 48;
data->P->p[43] = 49;
data->P->p[44] = 50;
data->P->p[45] = 51;
data->P->p[46] = 52;
data->P->p[47] = 53;
data->P->p[48] = 54;
data->P->p[49] = 55;
data->P->p[50] = 56;

return data;

}

/* function to clean problem data structure */
void clean_problem_infeasibility(OSQPData * data){

// Clean vectors
c_free(data->l);
c_free(data->u);
c_free(data->q);

//Clean Matrices
c_free(data->A->x);
c_free(data->A->i);
c_free(data->A->p);
c_free(data->A);
c_free(data->P->x);
c_free(data->P->i);
c_free(data->P->p);
c_free(data->P);

c_free(data);

}

/* function to define solutions and additional data struct */
infeasibility_sols_data *  generate_problem_infeasibility_sols_data(){

infeasibility_sols_data * data = (infeasibility_sols_data *)c_malloc(sizeof(infeasibility_sols_data));

data->status_test = -3;

return data;

}

/* function to clean solutions and additional data struct */
void clean_problem_infeasibility_sols_data(infeasibility_sols_data * data){


c_free(data);

}

#endif
