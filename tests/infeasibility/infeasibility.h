#ifndef INFEASIBILITY_DATA_H
#define INFEASIBILITY_DATA_H
#include "osqp.h"


/* create additional data and solutions structure */
typedef struct {
c_int status_test;
} infeasibility_sols_data;

/* function to generate QP problem data */
Data * generate_problem_infeasibility(){

Data * data = (Data *)c_malloc(sizeof(Data));

// Problem dimensions
data->n = 50;
data->m = 150;

// Problem vectors
data->l = c_malloc(150 * sizeof(c_float));
data->l[0] = -3.79193239271352400266;
data->l[1] = -3.05438459654206440064;
data->l[2] = -3.27293354382944468028;
data->l[3] = -1.17430936894569537543;
data->l[4] = -4.06811665315439174861;
data->l[5] = -4.39077681352894266809;
data->l[6] = -2.46997818756193865397;
data->l[7] = -2.79680469200917736217;
data->l[8] = -3.62170942101611315067;
data->l[9] = -2.62450963316169172401;
data->l[10] = -2.22514364724875512991;
data->l[11] = -0.35607922459679741678;
data->l[12] = -0.93957764107091623629;
data->l[13] = -3.60077982208841085310;
data->l[14] = -4.73380043965027930142;
data->l[15] = -1.78231812644853859773;
data->l[16] = -2.35361841532224724816;
data->l[17] = -3.86708821680034109391;
data->l[18] = -3.31338932047084400168;
data->l[19] = -2.52816498075146212088;
data->l[20] = -1.18515429288677198727;
data->l[21] = -2.61499527662255815130;
data->l[22] = -3.38020503460754806468;
data->l[23] = -3.47445722661026135114;
data->l[24] = -2.73347801049682148644;
data->l[25] = 14.09304886449683102967;
data->l[26] = -3.15094101750673338813;
data->l[27] = -1.22746885270941641366;
data->l[28] = -2.87014498693912134542;
data->l[29] = -2.88617859961731504370;
data->l[30] = -3.19788530247269742190;
data->l[31] = -5.02334876819503595158;
data->l[32] = -2.82538740041816005544;
data->l[33] = -2.95721909428939344622;
data->l[34] = -5.38962277271562939518;
data->l[35] = -2.03008533581234296150;
data->l[36] = -2.54891700654500352741;
data->l[37] = -4.07541643472783654545;
data->l[38] = -1.08255065944030159919;
data->l[39] = -3.08552404097235477565;
data->l[40] = -1.61503531821756651787;
data->l[41] = -3.76119740404161095881;
data->l[42] = -4.29803226894387169210;
data->l[43] = -3.22073639569650760350;
data->l[44] = -5.06718532775579255656;
data->l[45] = -2.78230811056358540156;
data->l[46] = -1.40706433837441191592;
data->l[47] = -3.32155036665756009384;
data->l[48] = -2.34199204008456840498;
data->l[49] = -2.21597251189785104941;
data->l[50] = -3.12180130321938031912;
data->l[51] = -3.22121662464057090247;
data->l[52] = -4.92835463044088228912;
data->l[53] = -3.23940230391823558165;
data->l[54] = -1.49785293305357636306;
data->l[55] = -2.27576977991018125635;
data->l[56] = -3.75436200988946078283;
data->l[57] = -2.35716917426051564277;
data->l[58] = -2.35119213378311453511;
data->l[59] = -3.62477709957567206800;
data->l[60] = -3.46029618377623027214;
data->l[61] = -4.20598619567337816960;
data->l[62] = -0.94590096215942853775;
data->l[63] = 0.16049946369421519421;
data->l[64] = -2.66984802157973621917;
data->l[65] = -1.95520302002025458954;
data->l[66] = -4.49775211020917886628;
data->l[67] = -4.66247542437310436014;
data->l[68] = -3.33397314572248504305;
data->l[69] = -2.29104297333891437916;
data->l[70] = -3.66673873838366448652;
data->l[71] = -2.26514874262213128375;
data->l[72] = -3.11351471445090233203;
data->l[73] = -2.61210506541973375150;
data->l[74] = -5.09113954970147730705;
data->l[75] = -2.61984267473251453140;
data->l[76] = -3.23709895941912728645;
data->l[77] = -2.77872457671103445520;
data->l[78] = -1.92524959924001493050;
data->l[79] = -3.57195727981507449300;
data->l[80] = -3.26740097798145079366;
data->l[81] = -3.39827533556330374509;
data->l[82] = -3.69138545481432256423;
data->l[83] = -2.74791559999494783284;
data->l[84] = -4.12261069572734406563;
data->l[85] = -3.69567703820792914371;
data->l[86] = -3.45205275296594438217;
data->l[87] = -2.08506104975981232386;
data->l[88] = -2.59294714519436020339;
data->l[89] = -3.11352220495845344317;
data->l[90] = -1.28477441365770550519;
data->l[91] = -3.13643168231465541140;
data->l[92] = -2.67935563663639664256;
data->l[93] = -1.83091021462366221328;
data->l[94] = -2.41610660821246447938;
data->l[95] = -4.43915181554576943057;
data->l[96] = -3.16300531803623119487;
data->l[97] = -2.66085274127795390342;
data->l[98] = -3.44587128971006206868;
data->l[99] = -1.90437936082013958838;
data->l[100] = -3.53262981757626315371;
data->l[101] = -3.34701437800348777785;
data->l[102] = -4.54648735372944567956;
data->l[103] = -3.17816769702305768064;
data->l[104] = -3.76332296976231184260;
data->l[105] = -3.66593456591086308549;
data->l[106] = -4.15160294529680840014;
data->l[107] = -2.25046227566717460533;
data->l[108] = -1.81757196596102743591;
data->l[109] = -3.02474257543320490527;
data->l[110] = -2.11896614891974177652;
data->l[111] = -3.71582944473440601740;
data->l[112] = -3.00947712604577510831;
data->l[113] = -2.07779660272135924259;
data->l[114] = -4.30521594059196122117;
data->l[115] = -2.67736191481651930602;
data->l[116] = -3.20491613132774499917;
data->l[117] = -3.44554697892832884065;
data->l[118] = -2.71508429892813429873;
data->l[119] = -4.15212285159718774707;
data->l[120] = -2.70547855031628392553;
data->l[121] = -3.87959646869757923682;
data->l[122] = -2.97869843786719767920;
data->l[123] = -3.56853448118891547480;
data->l[124] = -2.45617889472200001677;
data->l[125] = -3.26755006824371996288;
data->l[126] = -3.16606108273286457333;
data->l[127] = -3.66965973440930781635;
data->l[128] = -4.28214779758145525079;
data->l[129] = -4.88176285525612474459;
data->l[130] = -1.70442897973152129865;
data->l[131] = -3.46824950848584334651;
data->l[132] = -1.89089651528781499401;
data->l[133] = -3.15741915025746067158;
data->l[134] = -3.58387729729507675813;
data->l[135] = -4.16108663980790449699;
data->l[136] = -3.37890252534866641909;
data->l[137] = -2.63482268821840559525;
data->l[138] = -4.74764994530004003082;
data->l[139] = -4.21360288328784360345;
data->l[140] = -2.21353351572849810225;
data->l[141] = -3.34590864804980281377;
data->l[142] = -3.26626983011980698279;
data->l[143] = -2.90483635583636434774;
data->l[144] = -4.47481932713223429232;
data->l[145] = -4.31505237112808792688;
data->l[146] = -1.35015315738139540791;
data->l[147] = -3.45362696814796787947;
data->l[148] = -3.23937065914086552709;
data->l[149] = -1.84956533005559164984;
data->u = c_malloc(150 * sizeof(c_float));
data->u[0] = 3.43247582736446066320;
data->u[1] = 2.39488360185842408256;
data->u[2] = 2.94354536538894695497;
data->u[3] = 3.70251524942562815212;
data->u[4] = 4.52795373750505270039;
data->u[5] = 4.33780839844572341235;
data->u[6] = 3.57468214241569048895;
data->u[7] = 2.05759593188993772372;
data->u[8] = 1.91014706432100411782;
data->u[9] = 3.74025250160206956807;
data->u[10] = 3.68441184235852814410;
data->u[11] = 0.83866458866462867405;
data->u[12] = 1.98804415545231250029;
data->u[13] = 3.40421312774598616713;
data->u[14] = 2.00983663647182986267;
data->u[15] = 2.91398962573807684961;
data->u[16] = 3.41476163423810064046;
data->u[17] = 3.12765688025790478122;
data->u[18] = 3.13468156230523753436;
data->u[19] = 2.65750858938397360731;
data->u[20] = 2.20545700430519042712;
data->u[21] = 2.48470960483916947226;
data->u[22] = 0.07149773075442844572;
data->u[23] = 3.54855475064348935277;
data->u[24] = 1.71948065835936936274;
data->u[25] = 14.59304886449683102967;
data->u[26] = 4.28963636214822408022;
data->u[27] = 2.62524074202545110168;
data->u[28] = 2.93861996392486890528;
data->u[29] = 3.98021395887487683396;
data->u[30] = 1.38739892214053384123;
data->u[31] = 3.14556742692819257812;
data->u[32] = 2.37139959774207342846;
data->u[33] = 2.87030078185013781678;
data->u[34] = 2.90881060010432967999;
data->u[35] = 2.24987982763943206166;
data->u[36] = 5.58753761470468468531;
data->u[37] = 3.04170961305181997147;
data->u[38] = 2.12762202192269889167;
data->u[39] = 1.77382107496906638033;
data->u[40] = 3.78806260506137837396;
data->u[41] = 4.22309865220694025112;
data->u[42] = 3.75635143569948581899;
data->u[43] = 3.05488584358892545367;
data->u[44] = 3.07074041665817976110;
data->u[45] = 3.93498299604499912618;
data->u[46] = 4.75012350877152833561;
data->u[47] = 2.91490122412839935961;
data->u[48] = 2.99038394111450589463;
data->u[49] = 2.93779797495223160553;
data->u[50] = 2.85762622892100193184;
data->u[51] = 4.21007465701018457338;
data->u[52] = 1.87562612544443485518;
data->u[53] = 3.46758040388151433930;
data->u[54] = 1.60015739584868410539;
data->u[55] = 3.57020174035329862505;
data->u[56] = 4.32680442154580546799;
data->u[57] = 3.76664797791111904957;
data->u[58] = 3.78321838243116426170;
data->u[59] = 3.45540088181315985238;
data->u[60] = 2.33550932391523735632;
data->u[61] = 2.44388240401921219558;
data->u[62] = 4.13205603739883464698;
data->u[63] = 3.66713005135007952262;
data->u[64] = 2.09281450068111896101;
data->u[65] = 4.29927770854916246890;
data->u[66] = 3.53931494029744531105;
data->u[67] = 4.20958383207259423386;
data->u[68] = 3.14816591861834194077;
data->u[69] = 2.88292613652710727479;
data->u[70] = 2.64850745274356125236;
data->u[71] = 3.64047177920630726788;
data->u[72] = 3.24843772775697603450;
data->u[73] = 3.18104427320066607265;
data->u[74] = 2.44554670568301224520;
data->u[75] = 3.01726188978491016712;
data->u[76] = 2.83506316681396652868;
data->u[77] = 3.38883321598323616897;
data->u[78] = 2.84441391182811997851;
data->u[79] = 2.89246144350000244927;
data->u[80] = 3.87599430597548710864;
data->u[81] = 3.44787370665761594424;
data->u[82] = 4.09744863118593194429;
data->u[83] = 3.27541475982771235209;
data->u[84] = 3.35206073661296422017;
data->u[85] = 3.11443302510823460949;
data->u[86] = 2.08903576286975756204;
data->u[87] = 2.58065826197967762567;
data->u[88] = 4.30735240662195373318;
data->u[89] = 3.49690282231984550521;
data->u[90] = 2.60304942065677336061;
data->u[91] = 3.42307307722412978990;
data->u[92] = 2.84637690085160732778;
data->u[93] = 2.98288863372289902998;
data->u[94] = 2.87012002559845447180;
data->u[95] = 1.41921067309770299047;
data->u[96] = 2.30112818501422022877;
data->u[97] = 2.43036385967008605746;
data->u[98] = 1.18274971302507458937;
data->u[99] = 2.69515508645686141520;
data->u[100] = 5.10209739498689263115;
data->u[101] = 2.86063685196524453147;
data->u[102] = 5.67749802171474371448;
data->u[103] = 2.77474053289979272208;
data->u[104] = 2.27112379821069421126;
data->u[105] = 5.36592056114037951886;
data->u[106] = 3.32942807051366118642;
data->u[107] = 2.49913807302737023264;
data->u[108] = 3.13561656951049805286;
data->u[109] = 3.87544161063331582540;
data->u[110] = 2.67262013319264291056;
data->u[111] = 3.54707979096537329156;
data->u[112] = 2.26672658191061859867;
data->u[113] = 3.03860572421669239418;
data->u[114] = 1.93958634906610960513;
data->u[115] = 4.35723190136020210872;
data->u[116] = 3.23319560487608503863;
data->u[117] = 1.95645660708118929172;
data->u[118] = 2.82809598084148916541;
data->u[119] = 2.12152087267414968252;
data->u[120] = 3.40926628061787884150;
data->u[121] = 1.23358752645563551908;
data->u[122] = 3.44358999909660745686;
data->u[123] = 3.41240956996799305045;
data->u[124] = 3.52957608993020377497;
data->u[125] = 4.06046346841322236543;
data->u[126] = 4.32205491827398624594;
data->u[127] = 2.97493542329290017179;
data->u[128] = 1.56286152678613188272;
data->u[129] = 2.08421867031847529717;
data->u[130] = 4.45724570725157320794;
data->u[131] = 3.37186459293077067656;
data->u[132] = 1.44962144389567182401;
data->u[133] = 2.67528164826434888823;
data->u[134] = 1.87636743540576889089;
data->u[135] = 3.34182882266884018208;
data->u[136] = 1.20376341534919606424;
data->u[137] = 3.29821588973384161037;
data->u[138] = 2.32805085022667990202;
data->u[139] = 3.05800506501195723530;
data->u[140] = 2.57517950320735966585;
data->u[141] = 2.49909209790531994244;
data->u[142] = 3.11466510363159443386;
data->u[143] = 2.90809127715297011108;
data->u[144] = 2.89055671443552864019;
data->u[145] = 5.86763813167618586419;
data->u[146] = 2.53315939937302792018;
data->u[147] = 3.27027870408153775728;
data->u[148] = 4.32800270912962226078;
data->u[149] = 0.99595343965669380637;
data->q = c_malloc(50 * sizeof(c_float));
data->q[0] = 0.74489412091103812674;
data->q[1] = 0.64801081453595510418;
data->q[2] = 0.01211187706588412287;
data->q[3] = 2.63768925374522833494;
data->q[4] = 0.48926414825950720333;
data->q[5] = 0.38564594294006970809;
data->q[6] = 0.42090651947273205469;
data->q[7] = 0.66842274285477143447;
data->q[8] = -0.95888324948958225669;
data->q[9] = 0.25928999467450647431;
data->q[10] = -0.21930566647097565758;
data->q[11] = -0.05822124988593867234;
data->q[12] = -0.54215898276695906333;
data->q[13] = 0.45195159048299049509;
data->q[14] = -0.99777704276569501030;
data->q[15] = 0.55953738604476210838;
data->q[16] = 1.23749595746128759899;
data->q[17] = -1.79170159142275320363;
data->q[18] = 1.18737549795939312247;
data->q[19] = 1.19313424837805870382;
data->q[20] = -1.05933901948043929231;
data->q[21] = -0.70387645741731508231;
data->q[22] = 0.36057467280331961801;
data->q[23] = 1.53274502449081118094;
data->q[24] = 0.00844600955105251003;
data->q[25] = 2.08007874857995789242;
data->q[26] = 1.13942708241827239668;
data->q[27] = 0.78235753449338052423;
data->q[28] = 1.82240145674541986764;
data->q[29] = 0.30038109597765161318;
data->q[30] = -0.74876256169664678897;
data->q[31] = 0.36408608703614592228;
data->q[32] = 0.97823822672141291790;
data->q[33] = 0.58143785871485909045;
data->q[34] = 0.77243496239381370660;
data->q[35] = -0.78199268586976111717;
data->q[36] = -0.22890409394800867449;
data->q[37] = -0.60680400579249227366;
data->q[38] = 0.74759659063170558202;
data->q[39] = -0.65213396553734881422;
data->q[40] = -1.02613890914758010275;
data->q[41] = -1.11622667874989289771;
data->q[42] = -0.09156896928868020480;
data->q[43] = 0.40018215922277022845;
data->q[44] = -1.56054350438568967263;
data->q[45] = 0.67077049044945213918;
data->q[46] = -0.33240961565718696313;
data->q[47] = -2.15767807269082734223;
data->q[48] = 0.58088137284166818652;
data->q[49] = -0.43773783646461872365;


// Matrix A
//---------
data->A = c_malloc(sizeof(csc));
data->A->m = 150;
data->A->n = 50;
data->A->nz = -1;
data->A->nzmax = 75;
data->A->x = c_malloc(75 * sizeof(c_float));
data->A->x[0] = 0.19667885718200373013;
data->A->x[1] = 0.20789061537538244817;
data->A->x[2] = 0.35218317313267821778;
data->A->x[3] = 0.54877623501894157165;
data->A->x[4] = 0.30550881842174426595;
data->A->x[5] = 0.62435117279254981337;
data->A->x[6] = 0.11440051768785119979;
data->A->x[7] = 0.49150586967535103700;
data->A->x[8] = 0.21197672909730413959;
data->A->x[9] = 0.21604196739665570970;
data->A->x[10] = 0.82192381461892827232;
data->A->x[11] = 0.44627819289414905057;
data->A->x[12] = 0.15264304598746103458;
data->A->x[13] = 0.41259982393188543437;
data->A->x[14] = 0.26007164008053929027;
data->A->x[15] = 0.72853668982922115127;
data->A->x[16] = 0.96437326709492332544;
data->A->x[17] = 0.19924400097002703536;
data->A->x[18] = 0.78627420501689282428;
data->A->x[19] = 0.34161988932164744082;
data->A->x[20] = 0.20642271311975157744;
data->A->x[21] = 0.73279606863359059155;
data->A->x[22] = 0.63878506377212174172;
data->A->x[23] = 0.78357867324402818987;
data->A->x[24] = 0.56317816293155587015;
data->A->x[25] = 0.79447027019126514880;
data->A->x[26] = 0.41075324970431104088;
data->A->x[27] = 0.02200791943360336234;
data->A->x[28] = 0.30236682458396102469;
data->A->x[29] = 0.56616612919311626317;
data->A->x[30] = 0.29982636815278373987;
data->A->x[31] = 0.90374480509409371720;
data->A->x[32] = 0.90985217576251076199;
data->A->x[33] = 0.29413983411977628890;
data->A->x[34] = 0.23392395534422560921;
data->A->x[35] = 0.68798008032715995963;
data->A->x[36] = 0.39733384658191595040;
data->A->x[37] = 0.46122369980603206141;
data->A->x[38] = 0.80292926238772577285;
data->A->x[39] = 0.96341823568741336015;
data->A->x[40] = 0.36799920542920638855;
data->A->x[41] = 0.01650477431770103198;
data->A->x[42] = 0.57594061876072277784;
data->A->x[43] = 0.50925011216982662976;
data->A->x[44] = 0.14839530815255452811;
data->A->x[45] = 0.92145077192439373004;
data->A->x[46] = 0.97576963234553892867;
data->A->x[47] = 0.54483224916948369554;
data->A->x[48] = 0.55744045559792909650;
data->A->x[49] = 0.23322515136483334963;
data->A->x[50] = 0.11116444739209974113;
data->A->x[51] = 0.85080155711141725039;
data->A->x[52] = 0.83141412110856693918;
data->A->x[53] = 0.43876029593578058652;
data->A->x[54] = 0.29168850062474704909;
data->A->x[55] = 0.85833584825024922260;
data->A->x[56] = 0.90731630385168715591;
data->A->x[57] = 0.91513609847351673476;
data->A->x[58] = 0.81741672036386991973;
data->A->x[59] = 0.77870336515937255140;
data->A->x[60] = 0.63690678734761663193;
data->A->x[61] = 0.97624846147857813339;
data->A->x[62] = 0.62400454622472645294;
data->A->x[63] = 0.63893867604625620427;
data->A->x[64] = 0.18485866706627762657;
data->A->x[65] = 0.18931577274680577716;
data->A->x[66] = 0.69975057477828472852;
data->A->x[67] = 0.01896353968053288153;
data->A->x[68] = 0.22627811375512862924;
data->A->x[69] = 0.90272842310623169215;
data->A->x[70] = 0.76294963616998101585;
data->A->x[71] = 0.24013662600532059699;
data->A->x[72] = 0.37138499418741577340;
data->A->x[73] = 0.73163688081109057304;
data->A->x[74] = 0.68442682815325117662;
data->A->i = c_malloc(75 * sizeof(c_int));
data->A->i[0] = 15;
data->A->i[1] = 36;
data->A->i[2] = 83;
data->A->i[3] = 112;
data->A->i[4] = 44;
data->A->i[5] = 65;
data->A->i[6] = 80;
data->A->i[7] = 1;
data->A->i[8] = 61;
data->A->i[9] = 5;
data->A->i[10] = 36;
data->A->i[11] = 43;
data->A->i[12] = 76;
data->A->i[13] = 29;
data->A->i[14] = 73;
data->A->i[15] = 20;
data->A->i[16] = 116;
data->A->i[17] = 124;
data->A->i[18] = 75;
data->A->i[19] = 104;
data->A->i[20] = 119;
data->A->i[21] = 108;
data->A->i[22] = 69;
data->A->i[23] = 10;
data->A->i[24] = 24;
data->A->i[25] = 32;
data->A->i[26] = 109;
data->A->i[27] = 121;
data->A->i[28] = 109;
data->A->i[29] = 56;
data->A->i[30] = 91;
data->A->i[31] = 27;
data->A->i[32] = 35;
data->A->i[33] = 55;
data->A->i[34] = 70;
data->A->i[35] = 2;
data->A->i[36] = 11;
data->A->i[37] = 94;
data->A->i[38] = 24;
data->A->i[39] = 129;
data->A->i[40] = 16;
data->A->i[41] = 24;
data->A->i[42] = 92;
data->A->i[43] = 141;
data->A->i[44] = 30;
data->A->i[45] = 65;
data->A->i[46] = 79;
data->A->i[47] = 117;
data->A->i[48] = 76;
data->A->i[49] = 80;
data->A->i[50] = 96;
data->A->i[51] = 110;
data->A->i[52] = 21;
data->A->i[53] = 126;
data->A->i[54] = 148;
data->A->i[55] = 31;
data->A->i[56] = 76;
data->A->i[57] = 133;
data->A->i[58] = 12;
data->A->i[59] = 29;
data->A->i[60] = 37;
data->A->i[61] = 31;
data->A->i[62] = 64;
data->A->i[63] = 76;
data->A->i[64] = 108;
data->A->i[65] = 93;
data->A->i[66] = 131;
data->A->i[67] = 142;
data->A->i[68] = 51;
data->A->i[69] = 74;
data->A->i[70] = 132;
data->A->i[71] = 67;
data->A->i[72] = 105;
data->A->i[73] = 115;
data->A->i[74] = 118;
data->A->p = c_malloc((50 + 1) * sizeof(c_int));
data->A->p[0] = 0;
data->A->p[1] = 4;
data->A->p[2] = 7;
data->A->p[3] = 9;
data->A->p[4] = 11;
data->A->p[5] = 11;
data->A->p[6] = 12;
data->A->p[7] = 13;
data->A->p[8] = 13;
data->A->p[9] = 15;
data->A->p[10] = 18;
data->A->p[11] = 21;
data->A->p[12] = 22;
data->A->p[13] = 23;
data->A->p[14] = 23;
data->A->p[15] = 26;
data->A->p[16] = 28;
data->A->p[17] = 29;
data->A->p[18] = 31;
data->A->p[19] = 31;
data->A->p[20] = 31;
data->A->p[21] = 32;
data->A->p[22] = 34;
data->A->p[23] = 35;
data->A->p[24] = 35;
data->A->p[25] = 38;
data->A->p[26] = 39;
data->A->p[27] = 40;
data->A->p[28] = 44;
data->A->p[29] = 47;
data->A->p[30] = 48;
data->A->p[31] = 52;
data->A->p[32] = 53;
data->A->p[33] = 53;
data->A->p[34] = 55;
data->A->p[35] = 57;
data->A->p[36] = 57;
data->A->p[37] = 58;
data->A->p[38] = 59;
data->A->p[39] = 59;
data->A->p[40] = 60;
data->A->p[41] = 61;
data->A->p[42] = 61;
data->A->p[43] = 65;
data->A->p[44] = 66;
data->A->p[45] = 68;
data->A->p[46] = 69;
data->A->p[47] = 69;
data->A->p[48] = 71;
data->A->p[49] = 72;
data->A->p[50] = 75;


// Matrix P
//---------
data->P = c_malloc(sizeof(csc));
data->P->m = 50;
data->P->n = 50;
data->P->nz = -1;
data->P->nzmax = 60;
data->P->x = c_malloc(60 * sizeof(c_float));
data->P->x[0] = 1.00000000000000000000;
data->P->x[1] = 1.00000000000000000000;
data->P->x[2] = 1.00000000000000000000;
data->P->x[3] = 1.00000000000000000000;
data->P->x[4] = 1.00000000000000000000;
data->P->x[5] = 2.66562039223216329376;
data->P->x[6] = 1.43612280332755837264;
data->P->x[7] = 0.10272521131059678123;
data->P->x[8] = 1.00000000000000000000;
data->P->x[9] = 1.31855783221907896241;
data->P->x[10] = 0.43179624707084485191;
data->P->x[11] = 1.19130019915432328048;
data->P->x[12] = 0.23845366394762043671;
data->P->x[13] = 0.43179624707084485191;
data->P->x[14] = 1.60643075663273560139;
data->P->x[15] = 1.00000000000000000000;
data->P->x[16] = 1.00000000000000000000;
data->P->x[17] = 0.23845366394762043671;
data->P->x[18] = 1.29722995637958127269;
data->P->x[19] = 1.00000000000000000000;
data->P->x[20] = 1.00000000000000000000;
data->P->x[21] = 1.00000000000000000000;
data->P->x[22] = 1.00000000000000000000;
data->P->x[23] = 1.00000000000000000000;
data->P->x[24] = 1.00356238603525071973;
data->P->x[25] = 1.78698000919087096605;
data->P->x[26] = 1.89093375460309598424;
data->P->x[27] = 1.00000000000000000000;
data->P->x[28] = 1.00000000000000000000;
data->P->x[29] = 1.52939657375657178662;
data->P->x[30] = 0.13387638195217671511;
data->P->x[31] = 1.19509437584434063950;
data->P->x[32] = 1.00000000000000000000;
data->P->x[33] = 1.00000000000000000000;
data->P->x[34] = 1.25875646765759841017;
data->P->x[35] = 1.30949674159019235908;
data->P->x[36] = 1.00000000000000000000;
data->P->x[37] = 1.00000000000000000000;
data->P->x[38] = 1.00000000000000000000;
data->P->x[39] = 0.10272521131059678123;
data->P->x[40] = 1.70958661958333291153;
data->P->x[41] = 1.00000000000000000000;
data->P->x[42] = 1.67157899292799028146;
data->P->x[43] = 1.00000000000000000000;
data->P->x[44] = 1.00000000000000000000;
data->P->x[45] = 1.00000000000000000000;
data->P->x[46] = 1.00000000000000000000;
data->P->x[47] = 1.00000000000000000000;
data->P->x[48] = 1.00000000000000000000;
data->P->x[49] = 1.00000000000000000000;
data->P->x[50] = 1.95318825559395081726;
data->P->x[51] = 0.30746520330799892440;
data->P->x[52] = 1.00000000000000000000;
data->P->x[53] = 0.13387638195217671511;
data->P->x[54] = 1.97099522531320192620;
data->P->x[55] = 1.00000000000000000000;
data->P->x[56] = 1.47037856408232547878;
data->P->x[57] = 1.00000000000000000000;
data->P->x[58] = 0.30746520330799892440;
data->P->x[59] = 1.10260351965227343385;
data->P->i = c_malloc(60 * sizeof(c_int));
data->P->i[0] = 0;
data->P->i[1] = 1;
data->P->i[2] = 2;
data->P->i[3] = 3;
data->P->i[4] = 4;
data->P->i[5] = 5;
data->P->i[6] = 6;
data->P->i[7] = 33;
data->P->i[8] = 7;
data->P->i[9] = 8;
data->P->i[10] = 10;
data->P->i[11] = 9;
data->P->i[12] = 13;
data->P->i[13] = 8;
data->P->i[14] = 10;
data->P->i[15] = 11;
data->P->i[16] = 12;
data->P->i[17] = 9;
data->P->i[18] = 13;
data->P->i[19] = 14;
data->P->i[20] = 15;
data->P->i[21] = 16;
data->P->i[22] = 17;
data->P->i[23] = 18;
data->P->i[24] = 19;
data->P->i[25] = 20;
data->P->i[26] = 21;
data->P->i[27] = 22;
data->P->i[28] = 23;
data->P->i[29] = 24;
data->P->i[30] = 45;
data->P->i[31] = 25;
data->P->i[32] = 26;
data->P->i[33] = 27;
data->P->i[34] = 28;
data->P->i[35] = 29;
data->P->i[36] = 30;
data->P->i[37] = 31;
data->P->i[38] = 32;
data->P->i[39] = 6;
data->P->i[40] = 33;
data->P->i[41] = 34;
data->P->i[42] = 35;
data->P->i[43] = 36;
data->P->i[44] = 37;
data->P->i[45] = 38;
data->P->i[46] = 39;
data->P->i[47] = 40;
data->P->i[48] = 41;
data->P->i[49] = 42;
data->P->i[50] = 43;
data->P->i[51] = 49;
data->P->i[52] = 44;
data->P->i[53] = 24;
data->P->i[54] = 45;
data->P->i[55] = 46;
data->P->i[56] = 47;
data->P->i[57] = 48;
data->P->i[58] = 43;
data->P->i[59] = 49;
data->P->p = c_malloc((50 + 1) * sizeof(c_int));
data->P->p[0] = 0;
data->P->p[1] = 1;
data->P->p[2] = 2;
data->P->p[3] = 3;
data->P->p[4] = 4;
data->P->p[5] = 5;
data->P->p[6] = 6;
data->P->p[7] = 8;
data->P->p[8] = 9;
data->P->p[9] = 11;
data->P->p[10] = 13;
data->P->p[11] = 15;
data->P->p[12] = 16;
data->P->p[13] = 17;
data->P->p[14] = 19;
data->P->p[15] = 20;
data->P->p[16] = 21;
data->P->p[17] = 22;
data->P->p[18] = 23;
data->P->p[19] = 24;
data->P->p[20] = 25;
data->P->p[21] = 26;
data->P->p[22] = 27;
data->P->p[23] = 28;
data->P->p[24] = 29;
data->P->p[25] = 31;
data->P->p[26] = 32;
data->P->p[27] = 33;
data->P->p[28] = 34;
data->P->p[29] = 35;
data->P->p[30] = 36;
data->P->p[31] = 37;
data->P->p[32] = 38;
data->P->p[33] = 39;
data->P->p[34] = 41;
data->P->p[35] = 42;
data->P->p[36] = 43;
data->P->p[37] = 44;
data->P->p[38] = 45;
data->P->p[39] = 46;
data->P->p[40] = 47;
data->P->p[41] = 48;
data->P->p[42] = 49;
data->P->p[43] = 50;
data->P->p[44] = 52;
data->P->p[45] = 53;
data->P->p[46] = 55;
data->P->p[47] = 56;
data->P->p[48] = 57;
data->P->p[49] = 58;
data->P->p[50] = 60;

return data;

}

/* function to clean problem data structure */
void clean_problem_infeasibility(Data * data){

// Clean vectors
c_free(data->l);
c_free(data->u);
c_free(data->q);

//Clean Matrices
c_free(data->A->x);
c_free(data->A->i);
c_free(data->A->p);
c_free(data->A);
c_free(data->P->x);
c_free(data->P->i);
c_free(data->P->p);
c_free(data->P);

c_free(data);

}

/* function to define solutions and additional data struct */
infeasibility_sols_data *  generate_problem_infeasibility_sols_data(){

infeasibility_sols_data * data = (infeasibility_sols_data *)c_malloc(sizeof(infeasibility_sols_data));

data->status_test = -3;

return data;

}

/* function to clean solutions and additional data struct */
void clean_problem_infeasibility_sols_data(infeasibility_sols_data * data){


c_free(data);

}

#endif
